--- a/es-app/src/guis/GuiMenu.cpp
+++ b/es-app/src/guis/GuiMenu.cpp
@@ -1049,7 +1049,7 @@
 #endif
 
 
-#if !defined(WIN32) && !defined _ENABLEEMUELEC || defined(_DEBUG)
+#if !defined(WIN32) || defined(_DEBUG)
 	s->addGroup(_("HARDWARE"));
 
 	// brighness
@@ -1202,7 +1202,7 @@
 			overclock_choice->add(currentOverclock, currentOverclock, true);
 	}
 
-#if !defined(WIN32) && !defined _ENABLEEMUELEC || defined(_DEBUG)
+#if !defined(WIN32) || defined(_DEBUG)
 	// overclocking
 	s->addWithLabel(_("OVERCLOCK"), overclock_choice);
 	s->addGroup(_("STORAGE"));
@@ -2629,7 +2629,6 @@
 {
 	auto s = new GuiSettings(mWindow, _("SOUND SETTINGS").c_str());
 
-#ifndef _ENABLEEMUELEC
 	s->addGroup(_("VOLUME"));
 
 	// volume
@@ -2647,7 +2646,6 @@
 	volumePopup->setState(Settings::getInstance()->getBool("VolumePopup"));
 	s->addWithLabel(_("SHOW OVERLAY WHEN VOLUME CHANGES"), volumePopup);
 	s->addSaveFunc([volumePopup] { Settings::getInstance()->setBool("VolumePopup", volumePopup->getState()); });
-#endif
 
 	s->addGroup(_("MUSIC"));
 
--- a/es-core/src/Settings.cpp
+++ b/es-core/src/Settings.cpp
@@ -181,7 +181,7 @@
 
 	// Audio out device for volume control
 	#if defined _RPI_ || defined _ENABLEEMUELEC
-		mStringMap["AudioDevice"] = "PCM";
+		mStringMap["AudioDevice"] = "Playback";
 	#else
 		mStringMap["AudioDevice"] = "Master";
 	#endif
--- a/es-app/src/FileData.cpp
+++ b/es-app/src/FileData.cpp
@@ -294,9 +294,6 @@
 	const std::string controllersConfig = InputManager::getInstance()->configureEmulators();
 
 	bool hideWindow = Settings::getInstance()->getBool("HideWindow");
-#if !WIN32
-	hideWindow = false;
-#endif
 	window->deinit(hideWindow);
 	
 	std::string systemName = system->getName();
--- a/es-core/src/InputManager.cpp
+++ b/es-core/src/InputManager.cpp
@@ -318,30 +318,13 @@
 		//}
 
 #ifdef _ENABLEEMUELEC
-    static int delayP = -1;
-
-        /* Use the POWER KEY (double tap) to turn off EmuELEC, specially useful for GTKING-PRO and Odroid Go Advance*/
-    if(ev.key.keysym.sym == SDLK_POWER) 
-		{
-            int delay = SDL_GetTicks();
-
-    if (delayP > 0 && delay - delayP < 500) 
-		{ 
-	/* TODO: if possible call a script to either shutdown or enter sleep depening on configuration */
-	// LOG(LogInfo) << "double click power button delay is: " << std::to_string(delay - delayP);
-            SDL_Event *quit = new SDL_Event();
-            quit->type = SDL_QUIT | 0X4000;
-            SDL_PushEvent(quit);
-            return false;
-		}
-    delayP = delay;
-		}
+    // sleep and shutdown on power key is handled by /emuelec/scripts/oga_events.py script
 #endif
-		window->input(getInputConfigByDevice(DEVICE_KEYBOARD), Input(DEVICE_KEYBOARD, TYPE_KEY, ev.key.keysym.sym, 1, false));
+		if(ev.key.keysym.sym != SDLK_POWER) window->input(getInputConfigByDevice(DEVICE_KEYBOARD), Input(DEVICE_KEYBOARD, TYPE_KEY, ev.key.keysym.sym, 1, false));
 		return true;
 
 	case SDL_KEYUP:
-		window->input(getInputConfigByDevice(DEVICE_KEYBOARD), Input(DEVICE_KEYBOARD, TYPE_KEY, ev.key.keysym.sym, 0, false));
+		if(ev.key.keysym.sym != SDLK_POWER) window->input(getInputConfigByDevice(DEVICE_KEYBOARD), Input(DEVICE_KEYBOARD, TYPE_KEY, ev.key.keysym.sym, 0, false));
 		return true;
 
 	case SDL_TEXTINPUT: